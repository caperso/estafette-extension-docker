builder:
  track: dev

labels:
  app-group: estafette-ci-extensions
  team: estafette-team
  language: golang

version:
  semver:
    major: 0
    minor: 1

stages:
  build:
    image: golang:1.13.0-alpine3.10
    env:
      CGO_ENABLED: 0
      GOOS: linux
    commands:
    - go test ./...
    - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:stable
    action: build
    container: docker
    inline: |
      FROM alpine:3.10

      RUN wget -O- https://github.com/wagoodman/dive/releases/download/v0.9.1/dive_0.9.1_linux_amd64.tar.gz | \
          tar -xzf - -C / \
          && /dive version

      FROM scratch

      LABEL maintainer="estafette.io"

      COPY ${ESTAFETTE_GIT_NAME} /
      COPY ca-certificates.crt /etc/ssl/certs/
      COPY --from=0 /dive /dive

      ENV PATH="/dod:$PATH" \
          ESTAFETTE_LOG_FORMAT="console"

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - extensions
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  test:
    image: extensions/docker:${ESTAFETTE_BUILD_VERSION}
    action: build
    container: docker-test
    inline: |
      FROM docker:18.09.0

      LABEL maintainer="estafette.io"

      COPY ${ESTAFETTE_GIT_NAME} /
      COPY ca-certificates.crt /etc/ssl/certs/

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - extensions
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  test-from-private-registry:
    image: extensions/docker:${ESTAFETTE_BUILD_VERSION}
    action: build
    no-cache: true
    container: hugo-test
    inline: |
      FROM estafette/hugo:master

      COPY ca-certificates.crt /etc/ssl/certs/
      COPY publish /publish
    repositories:
    - extensions
    path: ./publish-hugo
    copy:
    - /etc/ssl/certs/ca-certificates.crt
    - publish

  test-dive:
    image: extensions/docker:${ESTAFETTE_BUILD_VERSION}
    action: dive
    container: docker
    repositories:
    - extensions

  push-to-docker-hub:
    image: extensions/docker:stable
    action: push
    container: docker
    repositories:
    - extensions

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  windows:
    builder:
      os: windows
    clone: true
    stages:
      build:
        image: golang:1.13.0-windowsservercore-1809
        env:
          CGO_ENABLED: 0
          GOOS: windows
          GOARCH: amd64
        commands:
        - go build -v -ldflags "-X main.app=$env:ESTAFETTE_GIT_NAME -X main.version=$env:ESTAFETTE_BUILD_VERSION -X main.revision=$env:ESTAFETTE_GIT_REVISION -X main.branch=$env:ESTAFETTE_GIT_BRANCH -X main.buildDate=$env:ESTAFETTE_BUILD_DATETIME" -o ./publish/$env:ESTAFETTE_GIT_NAME.exe

      bake:
        image: extensions/docker:windowsservercore-1809
        action: build
        no-cache: true
        expand-variables: false
        container: docker
        repositories:
        - extensions
        dockerfile: Dockerfile.windowsservercore-1809
        path: ./publish

      test:
        image: extensions/docker:${ESTAFETTE_BUILD_VERSION}
        action: build
        container: docker-test
        versionTagSuffix: -suffix
        inline: |
          FROM mcr.microsoft.com/windows/servercore:1809

          RUN netsh interface ipv4 show interfaces
        repositories:
        - extensions

      push-to-docker-hub:
        image: extensions/docker:windowsservercore-1809
        action: push
        container: docker
        repositories:
        - extensions
        tags:
        - windowsservercore-1809
        pushVersionTag: false

  dev:
    triggers:
    - pipeline:
        name: self
        branch: .+
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: docker
        repositories:
        - extensions
        tags:
        - dev

  beta:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: docker
        repositories:
        - extensions
        tags:
        - beta

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'

  stable:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: docker
        repositories:
        - extensions
        tags:
        - stable
        - latest

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'