builder:
  track: dev

labels:
  app-group: estafette-ci-extensions
  team: estafette-team
  language: golang

version:
  semver:
    major: 0
    minor: 1

stages:
  build:
    image: golang:1.12.5-alpine3.9
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOFLAGS: -mod=vendor
    commands:
    - go test ./...
    - go build -a -installsuffix cgo -ldflags "-X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

  build-trivy:
    image: golang:1.12.5-alpine3.9
    env:
      TRIVY_VERSION: 0.1.4
      CGO_ENABLED: 0
      GOOS: linux
    commands:
    - wget --no-check-certificate -nv --spider --tries=5 https://github.com/knqyf263/trivy/archive/v${TRIVY_VERSION}.tar.gz
    - tar zxvf v${TRIVY_VERSION}.tar.gz --directory ./trivy-source
    - cd ./trivy-source
    - go build -a -installsuffix cgo -o ../publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:stable
    action: build
    container: docker
    inline: |
      FROM scratch

      LABEL maintainer="estafette.io"

      COPY ${ESTAFETTE_GIT_NAME} /
      COPY trivy /
      COPY ca-certificates.crt /etc/ssl/certs/

      RUN /trivy --refresh

      ENV PATH="/dod:$PATH"

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - extensions
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  test:
    image: extensions/docker:${ESTAFETTE_BUILD_VERSION}
    action: build
    container: docker-test
    inline: |
      FROM docker:18.09.0

      LABEL maintainer="estafette.io"

      COPY ${ESTAFETTE_GIT_NAME} /
      COPY ca-certificates.crt /etc/ssl/certs/

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - extensions
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  test-from-private-registry:
    image: extensions/docker:${ESTAFETTE_BUILD_VERSION}
    action: build
    container: hugo-test
    inline: |
      FROM estafette/hugo:master

      COPY ca-certificates.crt /etc/ssl/certs/
      COPY publish /publish
    repositories:
    - extensions
    path: ./publish-hugo
    copy:
    - /etc/ssl/certs/ca-certificates.crt
    - publish

  push-to-docker-hub:
    image: extensions/docker:stable
    action: push
    container: docker
    repositories:
    - extensions
    tags:
    - dev

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  beta:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: docker
        repositories:
        - extensions
        tags:
        - beta

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'

  stable:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: docker
        repositories:
        - extensions
        tags:
        - stable
        - latest

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'